
db:
- test db.experimentSessionsServer.insertClientAction()
- why is db.experimentSessionsLocal.sessionStartTime a string? but Date in experimentSessionsServer.


ui:
- Work on showing current experiment, what to do when it finishes?
- (lower priority) setup Redux like thing for storing state (that works with Vue, changes to state "reduce" to system changes)
- Show parameters of a box. 
- ui show result of last action 
- no updates on page to show server is working. 
- Should you be able to start more than one experiment. ??
- Check what happens running muiltiple experimets one after another
- what happens if running multiple sessions
- Export direct to Access 
- create sql scripts to summarise client data


client: 
- clean up client/server transition, network scan (make sure state is consistent)


server: 
- recurring network ARP scan to find new client stragglers
- this.state should be periodically sent to clients using io.emit(server_network_event)
- Clean up the server request for new session to not include sessionVariables from original config file
- Client UI status info should get reflected in server.experimentsList
- Data/message robustness improvements, hash handshake finalization to ensure that all client messages reached server.
- we want the bg process running on server, and a socket that sends messages to admin saying this is the latest exp listening


experiment: 
- remove clientAssignments block from config.js, save to DB instead including defaults from file, (add revert to defaults button)
- save "in flight" runs to DB so that updates to file experiments don't affect defaults, req thought and UI spec work
- Show last experiment 
- Test suite for testing experiments


BUGs:

Stop on admin page causes multiple clients to be created in the experiment session

rsci_ui dev depends on ChromeDriver, no longer has 32bit support (issue on pi), needed?
mongodb version issue, pi support?


